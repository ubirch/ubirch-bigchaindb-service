akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = DEBUG
  http {
    verbose-error-messages = off
    server {
      idle-timeout = 90s
      request-timeout = 60s
      remote-address-header = on
      # The value of the `Server` header to produce.
      # Set to the empty string to disable rendering of the server header.
      server-header = ubirch-template-service
    }
  }
}

ubirchTemplateService {

  gopipelinename = "noName"
  gopipelinename = ${?GO_PIPELINE_NAME_TEMPLATE} // "TEMPLATE" needs to be replaced with the service's short name
  gopipelinelabel = "noLabel"
  gopipelinelabel = ${?GO_PIPELINE_LABEL_TEMPLATE} // "TEMPLATE" needs to be replaced with the service's short name
  gopipelinerev = "noRev"
  gopipelinerev = ${?GO_REVISION_TEMPLATE} // "TEMPLATE" needs to be replaced with the service's short name

  interface = "localhost"
  port = 8092

  akka {
    actorTimeout = 15 // seconds
    numberOfWorkers = 10
  }

  es {
    // TODO anything Elasticsearch related
  }

  aws {
    // TODO anything AWS related
  }

  mqtt {
    // TODO anything MQTT related
  }

}
